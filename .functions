#!/bin/bash

# Find stuff in Maven POM files within this directory
findpom() {
    find . -name pom.xml | xargs grep $@
}

# Generate a random string which can serve as the basis for a password
genpasswd() {
  cat /dev/urandom | head -c 100 | base64 | cut -c -${1:-12}
}

# Determine disk usage for all files, also dotdirs
dusch() {
  if ! hash gsort 2>/dev/null; then
    (>&2 echo "This function relies on gsort which seems not to be installed.")
    return 1
  fi
  du -sch .[!.]* * | gsort -rh
}

# Start an HTTP server from a directory, optionally specifying the port
server() {
  local port="${1:-8000}"
  sleep 1 && open "http://localhost:${port}/" &
  # Set the default Content-Type to `text/plain` instead of `application/octet-stream`
  # And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
  python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}

eclipse() {
  open -n /Applications/Eclipse.app
}

jwt() {
    local part=`echo $1 | cut -d '.' -f 1`
    pad
    local json=`echo $part | base64 -D | jq`
    printf "Header\t%s\n" "$json"
    part=`echo $1 | cut -d '.' -f 2`
    pad
    json=`echo $part | base64 -D | jq`
    printf "Payload\t%s\n" "$json"
}

pad () {
    #size=${#part}
    while [ $((${#part} % 4)) -ne 0 ]; do
	part+="="
    done
}


mcd() {
  mkdir -p $1; cd $1;
}

rurl() {
    # follow redirect but print what's going on
    # redirect stderr to be able to grep curl output
    (set -o pipefail && curl -L "$1" 2>&1 | egrep "^[<>] (Location:|Host:|GET)")
}
