#!/bin/bash

# Find stuff in Maven POM files within this directory
findpom() {
    find . -name pom.xml | xargs grep $@
}

# Generate a random string which can serve as the basis for a password
genpasswd() {
  cat /dev/urandom | head -c 100 | base64 | cut -c -${1:-12}
}

# Determine disk usage for all files, also dotdirs
dusch() {
  if ! hash gsort 2>/dev/null; then
    (>&2 echo "This function relies on gsort which seems not to be installed.")
    return 1
  fi
  du -sch .[!.]* * | gsort -rh
}

# Start an HTTP server from a directory, optionally specifying the port
server() {
    python3 -m http.server
}

eclipse() {
  open -n /Applications/Eclipse.app
}

# Decode Header and Payload of a JWT
jwt() {
    if [[ -x $(command -v jq) ]]; then
        jq -R 'split (".") | .[0],.[1] | @base64d | fromjson' <<< "${1}"
        echo "Signature: $(echo "${1}" | awk -F'.' '{print $3}')"
    fi
}

# Pad string from stdin so that it can be base64 decoded
pad () {
    while read str; do
        while [ $((${#str} % 4)) -ne 0 ]; do
            str+="="
        done
        printf "$str"
    done
}

parseJwtPart() {
    echo "$1" | cut -d '.' -f "$2" | pad | base64 -D | jq -C
}


mcd() {
  mkdir -p "$1"; cd "$1";
}

rurl() {
    # follow redirect but print what's going on
    # redirect stderr to be able to grep curl output
    (set -o pipefail && curl -L "$1" 2>&1 | egrep "^[<>] (Location:|Host:|GET)")
}

remacs() {
    emacsclient -e "(kill-emacs)"
    emacs --daemon
}
